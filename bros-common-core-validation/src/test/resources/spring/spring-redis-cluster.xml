<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="  
    http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans.xsd  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context.xsd  
    http://www.springframework.org/schema/mvc  
    http://www.springframework.org/schema/mvc/spring-mvc.xsd  
    http://www.springframework.org/schema/tx    
    http://www.springframework.org/schema/tx/spring-tx.xsd  
    http://www.springframework.org/schema/cache    
	http://www.springframework.org/schema/cache/spring-cache.xsd">

	<!-- =======================redis集群配置开始=============================== -->
	<!-- redis cluster 配置 -->
	<bean class="redis.clients.jedis.HostAndPort" name="redisApp1">
		<constructor-arg index="0" value="${redis.cluster.host1}"></constructor-arg>
		<constructor-arg index="1" value="${redis.cluster.port1}"></constructor-arg>
	</bean>

	<bean class="redis.clients.jedis.HostAndPort" name="redisApp2">
		<constructor-arg index="0" value="${redis.cluster.host2}"></constructor-arg>
		<constructor-arg index="1" value="${redis.cluster.port2}"></constructor-arg>
	</bean>

	<bean class="redis.clients.jedis.HostAndPort" name="redisApp3">
		<constructor-arg index="0" value="${redis.cluster.host3}"></constructor-arg>
		<constructor-arg index="1" value="${redis.cluster.port3}"></constructor-arg>
	</bean>

	<bean class="redis.clients.jedis.HostAndPort" name="redisApp4">
		<constructor-arg index="0" value="${redis.cluster.host4}"></constructor-arg>
		<constructor-arg index="1" value="${redis.cluster.port4}"></constructor-arg>
	</bean>

	<bean class="redis.clients.jedis.HostAndPort" name="redisApp5">
		<constructor-arg index="0" value="${redis.cluster.host5}"></constructor-arg>
		<constructor-arg index="1" value="${redis.cluster.port5}"></constructor-arg>
	</bean>

	<bean class="redis.clients.jedis.HostAndPort" name="redisApp6">
		<constructor-arg index="0" value="${redis.cluster.host6}"></constructor-arg>
		<constructor-arg index="1" value="${redis.cluster.port6}"></constructor-arg>
	</bean>

	<!-- 
		maxWaitMillis：获取连接时的最大等待毫秒数(如果设置为阻塞时BlockWhenExhausted),如果超时就抛异常, 小于零:阻塞不确定的时间, 默认-1； 
		maxTotal：最大连接数, 默认8个；
		minIdle：最小空闲连接数, 默认0； 
		maxIdle：最大空闲连接数；
		minEvictableIdleTimeMillis：逐出连接的最小空闲时间    默认1800000毫秒(30分钟)； 
		lifo：是否启用后进先出, 默认true； -->
	<bean name="genericObjectPoolConfig" class="org.apache.commons.pool2.impl.GenericObjectPoolConfig">
		<property name="maxWaitMillis" value="${redis.cluster.maxWaitMillis}" />
		<property name="maxTotal" value="${redis.cluster.maxTotal}" />
		<property name="minIdle" value="${redis.cluster.minIdle}" />
		<property name="maxIdle" value="${redis.cluster.maxIdle}" />
		<property name="minEvictableIdleTimeMillis" value="${redis.cluster.minEvictableIdleTimeMillis}" />
		<property name="lifo" value="${redis.cluster.lifo}" />
	</bean>

	<!-- redis集群工厂类 -->
	<bean id="jedisCluster" class="bros.common.core.redis.cluster.JedisClusterFactory">
		<property name="haps">
			<set>
				<ref bean="redisApp1" />
				<ref bean="redisApp2" />
				<ref bean="redisApp3" />
				<ref bean="redisApp4" />
				<ref bean="redisApp5" />
				<ref bean="redisApp6" />
			</set>
		</property>
		<property name="timeout" value="${redis.cluster.timeout}" />
		<property name="maxRedirections" value="${redis.cluster.maxRedirections}" />
		<property name="genericObjectPoolConfig" ref="genericObjectPoolConfig" />
	</bean>
	<!-- redis管理器 -->
	<bean id="redisDao" class="bros.common.core.redis.impl.RedisClusterDaoImpl">
		<property name="jedisCluster" ref="jedisCluster" /><!-- 引用那个集群 -->
		<property name="expireTime" value="${redis.cluster.expire}" />
	</bean>

	<!-- =======================redis集群配置结束=============================== -->
	<!-- =======================redis缓存工具类开始=============================== -->
	<!-- 从缓存中获取数据工具类 -->
	<bean id="getCacheDataUtil" class="bros.common.core.redis.util.GetCacheDataUtil">
		<property name="validationRedisDao" ref="redisDao"/><!-- 获取校验模板缓存 -->
		<property name="errCodeRedisDao" ref="redisDao"/><!-- 获取错误码缓存 -->
		<property name="appParRedisDao" ref="redisDao"/><!-- 获取转义数据缓存 -->
		<property name="propertiesRedisDao" ref="redisDao"/><!-- 获取properties数据缓存 -->
	</bean>
	<!-- =======================redis缓存工具类结束=============================== -->
</beans>